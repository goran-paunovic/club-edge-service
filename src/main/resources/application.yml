spring:
  application:
    name: club-edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/ClubCatalog
        registration:
          keycloak:
            provider: keycloak
            client-id: club-edge-service
            client-secret: club-keycloak-secret
            scope: openid
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000
      request-read-timeout: 5000
      fail-fast: true
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 3000
        multiplier: 1.2
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      routes:
        - id: club-catalog-route
          uri: ${CLUB_CATALOG_SERVICE_URL:http://localhost:9001}/api/clubs
          predicates:
            - Path=/api/clubs/**
          filters:
            - name: CircuitBreaker
              args:
                name: clubCatalogCircuitBraker
                fallbackUri: forward:/club-catalog-fallback
        - id: spa-route
          uri: ${SPA_URL:http://localhost:3000}
          predicates:
            - Path=/,/_next/**,/favicon.ico
      default-filters:
        - SaveSession
        - name: Retry
          args:
            retries: 3
            method: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 1s
      connect-timeout: 2s
  session:
    store-type: redis
    timeout: 10m
    redis:
      namespace: spring:session:club:edge
resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 20
        permitted-number-of-calls-in-half-open-state: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          seconds: 15
  timelimiter:
    configs:
      default:
        timeout-duration:
          seconds: 5
server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful
logging:
  level:
    io.github.resilience4j: DEBUG
    org.springframework.cloud.gateway: DEBUG

